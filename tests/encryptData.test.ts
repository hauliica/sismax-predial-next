import {
  createPrivateKey,
  publicEncrypt,
  generateKeyPairSync,
  createPublicKey,
  constants,
} from "crypto";
import { encrypt } from "@/app/lib/banorte";

const dataObject = {
    "merchantId": "7652823",
    "name": "a7652823",
    "password": "#O2oLz1%",
    "mode": "AUT",
    "controlNumber": "PADM99302J",
    "terminalId": "76528231",
    "amount": "1.0",
    "merchantName": "MUNICIPIO DE ACUNA COA",
    "merchantCity": "CIUDAD ACUNA",
    "lang": "ES",
    "customerRef1": "22042709695XXFA36H01",
    "customerRef2": "",
    "customerRef3": "",
    "customerRef4": "",
    "customerRef5": "",
    "billToFirstName": "Saul Ariel Ochoa Chavez",
    "billToLastName": "Apellidos Cliente",
    "billToStreet": "Eugenia",
    "billToStreetNumber": "197",
    "billToStreetNumbe2": "",
    "billToStreet2Col": "Narvarte",
    "billToStreet2Del": "Benito Juarez",
    "billToCity": "CDMX",
    "billToState": "DF",
    "billToCountry": "MX",
    "billToPhoneNumber": "5566778899",
    "billToPostalCode": "03999",
    "billToEmail": "review@banorte.com",
    "billToCustomerId": "",
    "billToCustomerPassword": "",
    "billToDateOfBirth": "",
    "billToHostname": "LSTK",
    "billToHttpBrowserEmail": "",
    "billToIpAddress": "127.0.0.1",
    "comments": "Compra a MSI",
    "shipToFirstName": "",
    "shipToLastName": "",
    "shipToStreetNumber": "",
    "shipToStreetNumber2": "",
    "shipToStreet2Col": "",
    "shipToStreet2Del": "",
    "shipToCity": "",
    "shipToState": "",
    "shipToCountry": "",
    "shipToPostalCode": "",
    "shipToPhoneNumber": "",
    "merchantDefinedDataField3": "",
    "merchantDefinedDataField4": "",
    "merchantDefinedDataField5": "",
    "merchantDefinedDataField8": "",
    "merchantDefinedDataField6": "",
    "merchantDefinedDataField7": "",
    "merchantDefinedDataField9": "",
    "merchantDefinedDataField10": "",
    "merchantDefinedDataField11": "",
    "merchantDefinedDataField12": "",
    "merchantDefinedDataField13": "",
    "merchantDefinedDataField14": "",
    "merchantDefinedDataField15": "",
    "merchantDefinedDataField16": "",
    "merchantDefinedDataField17": "",
    "merchantDefinedDataField18": "",
    "merchantDefinedDataField19": "",
    "merchantDefinedDataField20": "",
    "merchantDefinedDataField21": "",
    "merchantDefinedDataField22": "",
    "merchantDefinedDataField23": "",
    "merchantDefinedDataField24": "",
    "merchantDefinedDataField25": "",
    "merchantDefinedDataField26": "",
    "merchantDefinedDataField27": "",
    "merchantDefinedDataField28": "",
    "merchantDefinedDataField29": "",
    "merchantDefinedDataField30": "",
    "merchantDefinedDataField31": "",
    "merchantDefinedDataField32": "",
    "merchantDefinedDataField33": "",
    "merchantDefinedDataField34": "",
    "merchantDefinedDataField35": "",
    "merchantDefinedDataField36": "",
    "merchantDefinedDataField37": "",
    "merchantDefinedDataField38": "",
    "merchantDefinedDataField39": "",
    "merchantDefinedDataField40": "",
    "merchantDefinedDataField41": "",
    "merchantDefinedDataField42": "",
    "merchantDefinedDataField43": "",
    "merchantDefinedDataField44": "",
    "merchantDefinedDataField45": "",
    "merchantDefinedDataField46": "",
    "merchantDefinedDataField47": "",
    "merchantDefinedDataField48": "",
    "merchantDefinedDataField49": "",
    "merchantDefinedDataField50": "",
    "merchantDefinedDataField51": "",
    "merchantDefinedDataField52": "",
    "merchantDefinedDataField53": "",
    "merchantDefinedDataField54": "",
    "merchantDefinedDataField55": "",
    "merchantDefinedDataField56": "",
    "merchantDefinedDataField57": "",
    "merchantDefinedDataField58": "",
    "merchantDefinedDataField59": "",
    "merchantDefinedDataField60": "",
    "merchantDefinedDataField61": "",
    "merchantDefinedDataField62": "",
    "merchantDefinedDataField63": "",
    "merchantDefinedDataField64": "",
    "merchantDefinedDataField65": "",
    "merchantDefinedDataField66": "",
    "merchantDefinedDataField67": "",
    "merchantDefinedDataField68": "",
    "merchantDefinedDataField69": "",
    "merchantDefinedDataField70": "",
    "merchantDefinedDataField71": "",
    "merchantDefinedDataField72": "",
    "merchantDefinedDataField73": "",
    "merchantDefinedDataField74": "",
    "merchantDefinedDataField75": "",
    "merchantDefinedDataField76": "",
    "merchantDefinedDataField77": "",
    "merchantDefinedDataField78": "",
    "merchantDefinedDataField79": "",
    "merchantDefinedDataField80": "",
    "merchantDefinedDataField81": "",
    "merchantDefinedDataField82": "",
    "merchantDefinedDataField83": "",
    "merchantDefinedDataField84": "",
    "merchantDefinedDataField85": "",
    "merchantDefinedDataField86": "",
    "merchantDefinedDataField87": "",
    "merchantDefinedDataField88": "",
    "merchantDefinedDataField89": "",
    "merchantDefinedDataField90": "",
    "merchantDefinedDataField91": "",
    "merchantDefinedDataField92": "",
    "merchantDefinedDataField93": "",
    "merchantDefinedDataField94": "",
    "merchantDefinedDataField95": "",
    "merchantDefinedDataField96": "",
    "merchantDefinedDataField97": "",
    "merchantDefinedDataField98": "",
    "merchantDefinedDataField99": "",
    "merchantDefinedDataField100": "",
};

describe("Encryption Tests", () => {
  let dataObject;
  let certificatepath: string;
  let pKey: string;

  beforeEach(() => {
    dataObject = { myData: "myValue" };

    // you should replace next lines by real certificate and key of course
    const { publicKey, privateKey } = generateKeyPairSync("rsa", {
      modulusLength: 2048,
      publicKeyEncoding: {
        type: "spki",
        format: "pem",
      },
      privateKeyEncoding: {
        type: "pkcs8",
        format: "pem",
      },
    });
  });
});

test("encrypt function returns a string", () => {
  expect(typeof encrypt(dataObject)).toBe("string");
});

test("encrypt function returns two sub strings separated by ::: delimiter", () => {
  const result = encrypt(dataObject);
  const resultParts = result.split(":::");
  expect(resultParts).toHaveLength(2);
});
